[{"C:\\Users\\Usuario\\Desktop\\semestre 10\\lenguajes\\tarea 1\\frontend\\frontend\\src\\index.js":"1","C:\\Users\\Usuario\\Desktop\\semestre 10\\lenguajes\\tarea 1\\frontend\\frontend\\src\\App.js":"2","C:\\Users\\Usuario\\Desktop\\semestre 10\\lenguajes\\tarea 1\\frontend\\frontend\\src\\reportWebVitals.js":"3"},{"size":513,"mtime":1691987322896,"results":"4","hashOfConfig":"5"},{"size":16288,"mtime":1691989701271,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1691972867321,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1o5rpou",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Usuario\\Desktop\\semestre 10\\lenguajes\\tarea 1\\frontend\\frontend\\src\\index.js",[],[],"C:\\Users\\Usuario\\Desktop\\semestre 10\\lenguajes\\tarea 1\\frontend\\frontend\\src\\App.js",["18","19","20","21","22"],[],"//Version frontend\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport Axios from 'axios';\n\nfunction App() {\n  const [nombre, setNombre] = useState(\"\");\n  const [apellido, setApellido] = useState(\"\");\n  const [i, setI] = useState(0); // Declaración de la variable 'i'\n  const nombreCompleto = nombre + \" \" + apellido;\n  let puntos = 0;\n  let respuestas = [];\n\n  const [historialList, setHistorial] = useState([]);\n  const [preguntasList, setPreguntas] = useState([]);\n  let preguntas = [];\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/preguntas\").then((response) => {\n      setPreguntas(response.data);\n    });\n  }, []);\n\n  const addHistorialEntry = () => {\n    Axios.post(\"http://localhost:3001/create\", {\n      nombreCompleto,\n      puntos,\n      ...respuestas.reduce((acc, answer, index) => {\n        acc[`res${index + 1}`] = answer;\n        return acc;\n      }, {}),\n    }).then(() => {\n      console.log(\"Historial guardado\");\n    });\n  }\n\n  const empezarJuego = () => {\n    document.querySelector(\".empezar\").style.display = \"none\";\n    document.querySelector(\".preguntas\").style.display = \"block\";\n    mostrarPregunta(i);\n  }\n\n  async function validarRespuesta(event) {\n    try {\n      respuestas[i] = event.target.innerHTML;\n\n      if (preguntas[i][4] === event.target.innerHTML) {\n        document.querySelector(\".dato\").innerHTML = preguntas[i][5];\n        puntos++;\n        event.target.style.backgroundColor = \"#4CAF50\";\n        await new Promise((resolve) => setTimeout(resolve, 6000));\n      } else {\n        document.querySelector(\".dato\").innerHTML = \"Failure\";\n        for (const element of document.querySelectorAll(\".op1, .op2, .op3\")) {\n          if (element.innerHTML === preguntas[i][4]) {\n            element.style.backgroundColor = \"#d9630f\";\n          } else {\n            element.style.backgroundColor = \"red\";\n          }\n        }\n        await new Promise((resolve) => setTimeout(resolve, 2000));\n      }\n\n      document.querySelector(\".dato\").innerHTML = \"\";\n      for (const element of document.querySelectorAll(\".op1, .op2, .op3\")) {\n        element.style.backgroundColor = \"#005d92\";\n      }\n\n      i++;\n      if (i < preguntas.length) {\n        mostrarPregunta(i);\n      } else {\n        finalizarJuego();\n      }\n    } catch (error) {\n      console.log(error);\n      addHistorialEntry();\n      mostrarResultadoFinal();\n    }\n  }\n\n  const mostrarPregunta = (index) => {\n    document.querySelector(\".preg\").innerHTML = preguntas[index][0];\n    document.querySelector(\".op1\").innerHTML = preguntas[index][1];\n    document.querySelector(\".op2\").innerHTML = preguntas[index][2];\n    document.querySelector(\".op3\").innerHTML = preguntas[index][3];\n  }\n\n  const finalizarJuego = () => {\n    addHistorialEntry();\n    mostrarResultadoFinal();\n  }\n\n  const mostrarResultadoFinal = () => {\n    document.querySelector(\".final\").style.display = \"block\";\n    document.querySelector(\".preguntas\").style.display = \"none\";\n    document.querySelector(\".finalPuntos\").innerHTML = \"Puntaje obtenido: \" + puntos;\n  }\n\n  const mostrarHistorial = () => {\n    Axios.get(\"http://localhost:3001/historial\").then((response) => {\n      setHistorial(response.data);\n      document.querySelector(\".inicio\").style.display = \"none\";\n      document.querySelector(\".historial\").style.display = \"block\";\n    });\n  }\n\n  const volverAInicioDesdeHistorial = () => {\n    document.querySelector(\".inicio\").style.display = \"block\";\n    document.querySelector(\".historial\").style.display = \"none\";\n  }\n\n  const volverAInicioDesdeJuego = () => {\n    document.querySelector(\".inicio\").style.display = \"block\";\n    document.querySelector(\".juego\").style.display = \"none\";\n    document.querySelector(\".empezar\").style.display = \"block\";\n    document.querySelector(\".preguntas\").style.display = \"none\";\n    document.querySelector(\".final\").style.display = \"none\";\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"inicio\">\n        <h1>Bienvenido al juego de preguntados</h1>\n        <div className=\"datosJugador\">\n          <h3>¿Cómo te llamas?</h3>\n          <label className=\"datos\">\n            Nombre: <input onChange={(event) => setNombre(event.target.value)} type=\"text\" placeholder=\"Ingrese su nombre\" />\n          </label>\n          <label className=\"datos\">\n            Apellido: <input onChange={(event) => setApellido(event.target.value)} type=\"text\" placeholder=\"Ingrese apellido\" />\n          </label>\n        </div>\n        <button className=\"boton\" onClick={empezarJuego}>Iniciar juego</button><br />\n        <button className=\"boton\" onClick={mostrarHistorial}>Mostrar historial</button>\n      </div>\n\n      <div className=\"historial\">\n        <h1>Historial de jugadores</h1>\n        <button className=\"boton\" onClick={volverAInicioDesdeHistorial}>Volver a inicio</button>\n        {historialList.map((val, key) => (\n          <div className=\"histUsuario\" key={key}>\n            <div className=\"jugador\">\n              <h4>Nombre: {val.nombreCompleto}</h4>\n              <h4>Fecha de juego: {val.fecha}</h4>\n              <h4>Puntuación: {val.puntos}</h4>\n            </div>\n            <div className=\"respuestas\">\n              <div className=\"_1_al_5\">\n                <h4>1: {val.res1}</h4>\n                <h4>2: {val.res2}</h4>\n                <h4>3: {val.res3}</h4>\n                <h4>4: {val.res4}</h4>\n                <h4>5: {val.res5}</h4>\n              </div>\n              <div className=\"_6_al_10\">\n                <h4>6: {val.res6}</h4>\n                <h4>7: {val.res7}</h4>\n                <h4>8: {val.res8}</h4>\n                <h4>9: {val.res9}</h4>\n                <h4>10: {val.res10}</h4>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      <div className=\"juego\">\n        <div className=\"empezar\">\n          <h1>¡Hora de jugar PREGUNTADOS!</h1>\n          <h3>Jugador: {nombre} {apellido}</h3>\n          <button className=\"empezar boton\" onClick={empezarJuego}>Play time!</button>\n        </div>\n\n        <div className=\"preguntas\">\n          <h3 className=\"preg\"></h3>\n          <button className=\"op1\" onClick={validarRespuesta}></button><br />\n          <button className=\"op2\" onClick={validarRespuesta}></button><br />\n          <button className=\"op3\" onClick={validarRespuesta}></button><br />\n          <br />\n          <div className=\"imagen\">\n            <p className=\"dato\"></p>\n          </div>\n        </div>\n\n        <div className=\"final\">\n          <h1>Fin del juego</h1>\n          <h2 className=\"finalPuntos\"></h2>\n          <button className=\"boton\" onClick={volverAInicioDesdeJuego}>Volver al inicio</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n\n\n\n/** \n * version beta, basura\n\nimport './App.css';\nimport { useState } from 'react';\nimport Axios from 'axios';\n\nfunction App() {\n\n  //variables que gestionan valores para el historial\n  const [nombre, setNombre] = useState(\"\");\n  const [apellido, setApellido] = useState(\"\");\n  const nombreCompleto = nombre + \" \" + apellido;\n  let puntos = 0;\n  let respuestas = [];\n\n  //variables que gestionan los datos de la base de datos\n  const [historialList, setHistorial] = useState([]);\n  const [preguntasList, setPreguntas] = useState([]);\n  let preguntas = [];\n  \n  \n  /**\n   * funcion que agrega el historial a la base de datos\n   *\n  const add = () => {\n    Axios.post(\"http://localhost:3001/create\", {\n      nombreCompleto: nombreCompleto,\n      puntos: puntos,\n      res1: respuestas[0],\n      res2: respuestas[1],\n      res3: respuestas[2],\n      res4: respuestas[3],\n      res5: respuestas[4],\n      res6: respuestas[5],\n      res7: respuestas[6],\n      res8: respuestas[7],\n      res9: respuestas[8],\n      res10: respuestas[9],\n      }).then(() => {\n        console.log(\"historial guardado\");\n      });\n  }\n\n  /**\n   * funcion que carga las preguntas de la base de datos\n   *\n  const init = () => {\n    //obtener preguntas de la base de datos\n    Axios.get(\"http://localhost:3001/preguntas\").then((response) => {\n        setPreguntas(response.data);        \n    });\n    document.querySelector(\".inicio\").style.display = \"none\";\n    document.querySelector(\".juego\").style.display = \"block\";\n  }\n    \n  /**\n   * funcion que muestra la pregunta y las opciones\n   *\n  const empezar = () => {\n    document.querySelector(\".empezar\").style.display = \"none\";\n    document.querySelector(\".preguntas\").style.display = \"block\";\n    document.querySelector(\".preg\").innerHTML = preguntas[i][0];\n    document.querySelector(\".op1\").innerHTML = preguntas[i][1];\n    document.querySelector(\".op2\").innerHTML = preguntas[i][2];\n    document.querySelector(\".op3\").innerHTML = preguntas[i][3];\n  }\n\n  /**\n   * funcion que detecta el boton presionado y valida si la respuesta es correcta o no\n   * \n   *\n  let i = 0;\n  async function validar (event) {\n    try{\n      //guardar respuesta en el array de respuestas\n      respuestas[i] = event.target.innerHTML;\n    \n      //respuesta correcta: suma 1 punto y cambia el color del boton a verde\n      if(preguntas[i][4] === event.target.innerHTML){\n  \n        document.querySelector(\".dato\").innerHTML = preguntas[i][5];\n        puntos++;\n        event.target.style.backgroundColor = \"#4CAF50\";\n        await new Promise((resolve) => setTimeout(resolve, 6000));\n      }else{\n        //respuesta incorrecta: cambia el color de botones a rojo y el de la respuesta correcta a naranja\n        document.querySelector(\".dato\").innerHTML = \"Failure\";\n        \n        for(const element of document.querySelectorAll(\".op1, .op2, .op3\")){\n          if(element.innerHTML === preguntas[i][4]){\n            element.style.backgroundColor = \"#d9630f\";\n          }else{\n            element.style.backgroundColor = \"red\";\n          }\n        }\n        await new Promise((resolve) => setTimeout(resolve, 2000));\n      }\n      \n      document.querySelector(\".dato\").innerHTML = \"\";\n\n      //cambiar color de los botones a azul\n      for(const element of document.querySelectorAll(\".op1, .op2, .op3\")){\n        element.style.backgroundColor = \"#005d92\";\n      }  \n      \n      i++;\n      document.querySelector(\".preg\").innerHTML = preguntas[i][0];\n      document.querySelector(\".op1\").innerHTML = preguntas[i][1];\n      document.querySelector(\".op2\").innerHTML = preguntas[i][2];\n      document.querySelector(\".op3\").innerHTML = preguntas[i][3];\n    }catch(error){\n      console.log(error);\n      add();\n      document.querySelector(\".final\").style.display = \"block\";\n      document.querySelector(\".preguntas\").style.display = \"none\";\n      document.querySelector(\".finalPuntos\").innerHTML = \"Puntaje obtenido: \" + puntos;\n    }\n  }    \n  \n  /**\n   * funcion que muestra el historial de la base de datos\n   *\n  const getHistorial = () => {\n    Axios.get(\"http://localhost:3001/historial\").then((response) => {\n        setHistorial(response.data);        \n        document.querySelector(\".inicio\").style.display = \"none\";\n        document.querySelector(\".historial\").style.display = \"block\";\n    });\n  }\n\n  /**\n   * funcion que vuelve a la pantalla de inicio desde el historial\n   *\n  const volver = () => {\n    document.querySelector(\".inicio\").style.display = \"block\";\n    document.querySelector(\".historial\").style.display = \"none\";\n  }\n\n  /**\n   * funcion que vuelve a la pantalla de inicio al terminar el juego\n   *\n  const volver2 = () => {\n    //bloquear todos los divs excepto el de inicio\n    document.querySelector(\".inicio\").style.display = \"block\";\n    document.querySelector(\".juego\").style.display = \"none\";\n    document.querySelector(\".empezar\").style.display = \"block\";\n    document.querySelector(\".preguntas\").style.display = \"none\";\n    document.querySelector(\".final\").style.display = \"none\";\n  }\n\n  return (\n    <div className=\"App\">\n      <div className = \"inicio\">\n        <h1>Bienvenido al juego de preguntados</h1>\n        <div className=\"datosJugador\">\n          <h3>¿Cómo te llamas?</h3>\n          <label className=\"datos\">Nombre: <input onChange={(event)=>{\n            setNombre(event.target.value);\n          }} type=\"text\" placeholder=\"Ingrese su nombre\" />\n          </label>\n          \n          <label className=\"datos\">Apellido: <input onChange={(event)=>{\n            setApellido(event.target.value);\n          }} type=\"text\" placeholder=\"Ingrese apellido\" /></label>\n        </div>  \n        <button className='boton' onClick={init}>Iniciar juego</button><br />\n        <button className = \"boton\" onClick={getHistorial}>Mostrar historial</button>\n      </div>\n      \n      <div className=\"historial\">\n        <h1>Historial de jugadores</h1>\n        <button className = \"boton\" onClick={volver}>Volver a inicio</button>\n      { \n          historialList.map((val, key) => {\n            return (\n              <div className=\"histUsuario\">\n                <div className='jugador'>\n                  <h4>Nombre: {val.nombreCompleto}</h4><br />\n                  <h4>Fecha de juego:{val.fecha}</h4><br />\n                  <h4>Puntuación: {val.puntos}</h4>  \n                </div>\n                <div className='respuestas'>\n                  <div className='_1_al_5'>\n                    <h4>1: {val.res1}</h4>\n                    <h4>2: {val.res2}</h4>\n                    <h4>3: {val.res3}</h4>\n                    <h4>4: {val.res4}</h4>\n                    <h4>5: {val.res5}</h4>\n                  </div>\n                  <div className='_6_al_10'>\n                    <h4>6: {val.res6}</h4>\n                    <h4>7: {val.res7}</h4>\n                    <h4>8: {val.res8}</h4>\n                    <h4>9: {val.res9}</h4>\n                    <h4>10: {val.res10}</h4>\n                  </div>\n                  \n                </div>\n              </div>\n            )\n          })\n        }\n      </div>\n\n      <div className=\"juego\">\n        {\n          preguntasList.map((val, keys) => {\n            preguntas.push([val.pregunta, val.op1, val.op2, val.op3, val.respuesta, val.dato]);\n            console.log(preguntas)\n            return(null);\n          })\n        }\n        <div className=\"empezar\">\n          <h1>¡Hora de jugar PREGUNTADOS!</h1>\n          <h3>Jugador: {nombre} {apellido}</h3>\n          <button className = \"empezar boton\" onClick={empezar}>Play time!</button>\n        </div>\n        \n        <div className=\"preguntas\">\n          <h3 className='preg'>a</h3>\n          <button className = \"op1\" onClick = {validar}></button><br />\n          <button className = \"op2\" onClick = {validar}></button><br />\n          <button className = \"op3\" onClick = {validar}></button><br />\n          <br/>\n          <div className='imagen'>\n            \n            <p className='dato'></p>\n          </div>\n        </div>\n\n        <div className='final'>\n          <h1>Fin del juego</h1>\n          <h2 className = \"finalPuntos\"> </h2>\n          <button className=\"boton\" onClick={volver2}>Volver al inicio</button>\n        </div>\n      </div>\n    </div>\n    \n  );\n}\n\nexport default App;\n\n\n/**\n * Código basura de pruebas\n * no funcional y no relevante\n */\n\n// Importa el componente Question\n//import React, { useState, useEffect } from 'react';\n\n\n\n/** \nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n*/\n\n\n\n\n\n\n//Preguntas\n/*\nfunction Question({ question, options, onSubmit }) {\n  const [selectedOption, setSelectedOption] = useState(null);\n\n  const handleOptionSelect = (optionIndex) => {\n    setSelectedOption(optionIndex);\n  };\n\n  const handleSubmit = () => {\n    onSubmit(selectedOption);\n  };\n\n  return (\n    <div>\n      <h3>{question}</h3>\n      {options.map((option, index) => (\n        <div key={index}>\n          <input\n            type=\"radio\"\n            checked={selectedOption === index}\n            onChange={() => handleOptionSelect(index)}\n          />\n          <label>{option}</label>\n        </div>\n      ))}\n      <button onClick={handleSubmit}>Enviar</button>\n    </div>\n  );\n}\n*/\n\n\n\n","C:\\Users\\Usuario\\Desktop\\semestre 10\\lenguajes\\tarea 1\\frontend\\frontend\\src\\reportWebVitals.js",[],[],{"ruleId":"23","severity":1,"message":"24","line":9,"column":13,"nodeType":"25","messageId":"26","endLine":9,"endColumn":17},{"ruleId":"23","severity":1,"message":"27","line":15,"column":10,"nodeType":"25","messageId":"26","endLine":15,"endColumn":23},{"ruleId":"28","severity":1,"message":"29","line":69,"column":7,"nodeType":"25","messageId":"30","endLine":69,"endColumn":8},{"ruleId":"31","severity":1,"message":"32","line":176,"column":11,"nodeType":"33","endLine":176,"endColumn":32},{"ruleId":"31","severity":1,"message":"32","line":188,"column":11,"nodeType":"33","endLine":188,"endColumn":39},"no-unused-vars","'setI' is assigned a value but never used.","Identifier","unusedVar","'preguntasList' is assigned a value but never used.","no-const-assign","'i' is constant.","const","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement"]